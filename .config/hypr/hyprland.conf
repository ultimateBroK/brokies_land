# #########################################################################################
# #    __  __                 __                __   _____             _____
# #   / / / /_  ______  _____/ /___ _____  ____/ / / ____/___  ____  / __(_)___ _
# #  / /_/ / / / / __ \/ ___/ / __ `/ __ \/ __  / / /   / __ \/ __ \/ /_/ / __ `/
# # / __  / /_/ / /_/ / /  / / /_/ / / / / /_/ / / /___/ /_/ / / / / __/ / /_/ /
# #/_/ /_/\__, / .___/_/  /_/\__,_/_/ /_/\__,_/  \____/\____/_/ /_/_/ /_/\__, /
# #      /____/_/                                                        /____/
# #
# # Personal Hyprland Configuration for Brokies
# #########################################################################################

# --- GENERAL SETTINGS & VARIABLES --- #

# Define frequently used applications as variables for easier management
$terminal = kitty        # Your preferred terminal emulator
# $terminal = ghostty 	  # Your preferred terminal emulator
$fileManager = thunar     # Your preferred file manager
# $menu = wofi --show drun # Example using wofi (uncomment to use)
$menu = tofi-drun -c ~/.config/tofi/configA --drun-launch=true # Your application launcher (tofi)
$browser = zen-browser      # Your web browser
$editor = code          # Your code editor (VS Code)
$trading = tradingview  # Escape brokie toolkit

# Set the primary modifier key (Mod key)
# SUPER is typically the Windows key or Command key on Mac keyboards
$mainMod = SUPER

# --- MONITOR CONFIGURATION --- #
# Configure your display outputs.
# See https://wiki.hyprland.org/Configuring/Monitors/ for all options.
#
# Syntax: monitor = <name>, <resolution>@<refreshRate>, <position>, <scale>
#   <name>: Use `hyprctl monitors` to find your monitor names (e.g., eDP-1, HDMI-A-1, DP-1).
#           An empty name "" applies the config to all monitors not explicitly configured.
#   <resolution>@<refreshRate>: Set resolution and refresh rate.
#                                `highres` or `preferred` uses the monitor's preferred mode.
#                                `highrr` uses the highest available refresh rate.
#                                Example: 1920x1080@144
#   <position>: Set the monitor's position on the desktop (x and y coordinates).
#               `auto` attempts automatic positioning.
#               Example: 0x0 (top-left), 1920x0 (to the right of a 1920px wide monitor)
#   <scale>: Set the display scaling factor.
#            1 = 100%, 1.5 = 150%, 2 = 200% etc.
#            `auto` tries to guess a scale.

# default (auto-detect multiple monitors, to change the position of each one, follow the below config)
# monitor = ,highres@highrr,auto,auto

# my setting
monitor = eDP-1, highres@highrr, 0x0, 1      # Laptop display: preferred resolution, max refresh, top-left, 100% scale
monitor = HDMI-A-1, highres@highrr, 1920x0, 1 # External HDMI: preferred resolution, max refresh, positioned right of eDP-1, 100% scale

# --- AUTOSTART APPLICATIONS --- #
# Programs to launch automatically when Hyprland starts.
# `exec-once` ensures the command runs only once per session.

# Authentication Agent: Handles password prompts for privileged actions (polkit)
exec-once = /usr/lib/polkit-kde-authentication-agent-1

# Notification Daemon: Manages desktop notifications
exec-once = /usr/bin/dunst

# Status Bar: Displays system information, workspaces, etc.
exec-once = waybar

# Clipboard Manager: Stores clipboard history
exec-once = wl-paste --type text --watch cliphist store # Watch for text copies
exec-once = wl-paste --type image --watch cliphist store # Watch for image copies

# Wallpaper Daemon: Manages wallpapers and transitions
exec-once = swww-daemon # Start the swww daemon first

# Idle Management: Handles screen locking/sleeping after inactivity
exec-once = hypridle

# ibus 
exec-once = ibus-daemon -drx

# jamesdsp
exec-once = jamesdsp

# --- OPTIONAL AUTOSTART (Uncomment to enable) --- #
# exec-once = $terminal        # Start terminal on login
# exec-once = nm-applet        # Network Manager applet (usually needed for Wi-Fi icons/management in tray)
# exec-once = blueman-applet   # Bluetooth applet
# exec-once = swaync           # Alternative notification daemon (Sway Notification Center)

# --- ENVIRONMENT VARIABLES --- #
# Set environment variables for applications running within the Hyprland session.

# General Desktop Session Info
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# QT (KDE Apps) Configuration
env = QT_QPA_PLATFORM,wayland;xcb           # Prefer Wayland backend for Qt apps, fallback to XCB (X11 compatibility)
env = QT_QPA_PLATFORMTHEME,qt6ct           # Use qt6ct for styling Qt6 applications
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1 # Disable Qt client-side decorations (use Hyprland borders)
env = QT_AUTO_SCREEN_SCALE_FACTOR,1       # Allow Qt apps to scale automatically (can sometimes conflict with Hyprland scaling)
env = QT_STYLE_OVERRIDE,kvantum            # Force usage of Kvantum theme engine for Qt apps

# GTK (GNOME Apps) / General Graphics Backend Configuration
env = GDK_BACKEND,wayland,x11,*            # Prefer Wayland backend for GTK apps, fallback to X11
env = SDL_VIDEODRIVER,wayland              # Force SDL applications (games, etc.) to use Wayland
env = CLUTTER_BACKEND,wayland              # Force Clutter applications to use Wayland

# Cursor Configuration
env = XCURSOR_SIZE,24                      # Set cursor size for XWayland applications
# Note: HYPRCURSOR_SIZE is set via Hyprland's own cursor settings section now.

# --- INPUT DEVICE CONFIGURATION --- #
# Configure keyboards, mice, touchpads, etc.

input {
    kb_layout = us              # Keyboard layout (e.g., us, gb, de)
    kb_variant =              # Keyboard variant (e.g., dvorak, colemak)
    kb_model =                # Keyboard model
    kb_options =              # Keyboard options (e.g., caps:escape)
    kb_rules =                # Keyboard rules

    follow_mouse = 1          # Focus follows mouse movement (1 = normal, 0 = disabled, 2 = focus only, 3 = full focus switch)
    sensitivity = 0           # Mouse sensitivity (-1.0 to 1.0, 0 = default/no change)
    accel_profile = default   # Acceleration profile (e.g., default, flat, adaptive)
    force_no_accel = false    # Force disable mouse acceleration

    touchpad {
        natural_scroll = true  # Enable natural (reversed) scrolling direction
        disable_while_typing = true # Disable touchpad while typing
        # clickfinger_behavior = false # Map multi-finger taps to right/middle click
        # middle_button_emulation = false # Emulate middle click with simultaneous left/right click
        # tap-to-click = true # Enable tap-to-click (usually enabled by default if supported)
    }
}

# Configure touchpad gestures
gestures {
    workspace_swipe = true            # Enable workspace switching with swipes
    workspace_swipe_fingers = 3       # Number of fingers required for workspace swipe
    # workspace_swipe_distance = 300  # Swipe distance in pixels
    # workspace_swipe_invert = true   # Invert swipe direction
    # workspace_swipe_min_speed_to_force = 30 # Minimum speed to force swipe even if distance not met
    # workspace_swipe_cancel_ratio = 0.5 # How much to backtrack to cancel a swipe
}

# Device-specific input configuration (Overrides general settings)
# Use `hyprctl devices` to find the name of your device.
device {
    name = epic-mouse-v1    # Example: Apply settings only to this specific mouse
    sensitivity = -0.5      # Set a different sensitivity for this device
}

# --- VISUAL APPEARANCE --- #

# General window appearance settings
general {
    gaps_in = 5              # Gaps between windows
    gaps_out = 5             # Gaps between windows and monitor edges
    border_size = 2          # Size of window borders in pixels

    # Border colors for active and inactive windows
    # Can use `rgb(RRGGBB)` or `rgba(RRGGBBAA)` for hex colors.
    # Multiple colors create gradients. The final number is the gradient angle in degrees.
    col.active_border = rgb(00ffbb) rgb(24273A) rgb(24273A) rgb(00ffbb) 25deg # Active window: Teal -> Dark -> Dark -> Teal gradient at 25deg
    col.inactive_border = rgb(24273A) rgb(ff1100) rgb(ff1100) rgb(24273A) 25deg # Inactive window: Dark -> Red -> Red -> Dark gradient at 25deg

    resize_on_border = true # Allow resizing windows by dragging the border (requires appropriate cursor theme support)
    allow_tearing = false   # Prevent screen tearing (may increase latency slightly)
    layout = dwindle        # Default layout engine (dwindle or master)
}

# Window decoration settings (rounding, shadows, blur)
decoration {
    rounding = 10             # Corner radius for window borders in pixels
    # rounding_power = 2      # (Deprecated) Was used for anti-aliasing quality of corners

    # Opacity settings
    active_opacity = 1.0     # Opacity of the active window (1.0 = fully opaque)
    inactive_opacity = 1.0   # Opacity of inactive windows (Set < 1.0 for transparency)
    # fullscreen_opacity = 1.0 # Opacity for fullscreen windows

    # Drop shadow configuration
    shadow {
    	enabled = true
    	range = 4
    	render_power = 3
    	color = rgba(1a1a1aee)
    	ignore_window = true
    }

    # Background blur settings
    blur {
        enabled = true                # Enable background blur
        size = 3                      # Blur strength/radius
        passes = 1                    # Number of blur passes (more passes = smoother but slower)
        # ignore_opacity = true       # Deprecated - use blur.special = true instead for blurring under transparent windows
        new_optimizations = true      # Enable newer blur optimizations (recommended)
        xray = false                  # See through windows with blur (requires more resources)
        noise = 0.0117                # Amount of noise to add to the blur (0.0 - 1.0)
        contrast = 0.8916             # Blur contrast (0.0 - 2.0)
        brightness = 0.8172           # Blur brightness (0.0 - 2.0)
        vibrancy = 0.1696             # Add a subtle color tint based on the content behind (0.0 - 1.0)
        vibrancy_darkness = 0.0       # How much to darken the vibrancy effect (0.0 - 1.0)
        # special = false             # Enable blurring under windows set to special_fallthrough = true (e.g. transparent terminals)
        # popups = false              # Enable blurring for popup windows/menus
        # popups_ignorealpha = 0.2    # Threshold for ignoring transparent parts of popups (0.0 - 1.0)
    }
}

# --- ANIMATIONS --- #
# Configure visual animations for windows, workspaces, etc.
animations {
    enabled = yes             # Enable or disable all animations globally

    # --- BEZIER CURVES --- #
    # Define custom animation timing functions (speed curves).
    # Format: bezier = <name>, <x1>, <y1>, <x2>, <y2>
    # These control the acceleration and deceleration of animations.
    # See https://cubic-bezier.com/ for visualization.
    bezier = easeOutQuart, 0.25, 1, 0.5, 1    # Starts fast, decelerates quickly towards the end
    bezier = easeInOutSine, 0.37, 0, 0.63, 1 # Gentle acceleration and deceleration
    bezier = modernBounce, 0.18, 0.99, 0, 1.15 # A custom curve with a slight overshoot/bounce effect
    # bezier = linear, 0, 0, 1, 1              # Constant speed (no easing)

    # --- Animation Definitions --- #
    # Format: animation = <name>, <enabled>, <speed>, <curve>, [style] [direction/options]
    #   <name>: Target element (windows, workspaces, borders, fade, etc.)
    #   <enabled>: 1 for on, 0 for off (can override the global 'enabled')
    #   <speed>: Duration factor (higher = slower, lower = faster, arbitrary units, often around 5-10)
    #   <curve>: Bezier curve name (defined above or built-in like 'default', 'linear')
    #   [style]: Animation type (e.g., 'slide', 'fade', 'popin')
    #   [direction/options]: Specific options for the style (e.g., 'up', 'down', 'left', 'right', '70%')

    # Window Animations
    animation = windowsIn, 1, 4, easeOutQuart, slide     # Window opening animation
    animation = windowsOut, 1, 3, easeOutQuart, slide    # Window closing animation
    animation = windowsMove, 1, 4, easeInOutSine        # Window move/resize animation (no style needed usually)

    # Border Animations
    animation = border, 1, 5, default                     # Border color transition (when focus changes)
    animation = borderangle, 1, 30, default, loop        # Animated border gradient angle rotation (loops)

    # Fade Animations (Often affect layers, dimming, etc.)
    animation = fadeIn, 1, 4, easeInOutSine             # General fade-in effect
    animation = fadeOut, 1, 3, easeInOutSine            # General fade-out effect
    animation = fadeSwitch, 1, 3, easeInOutSine         # Fade effect for specific switches (if used)
    animation = fadeShadow, 1, 3, easeInOutSine         # Fade animation for shadows (if enabled)
    animation = fadeDim, 1, 3, easeInOutSine            # Fade animation for the inactive window dimming effect (misc:inactive_dim)

    # Workspace Animations
    animation = workspaces, 1, 4, easeOutQuart, slidefade 70% # Workspace switching animation (slides and fades, 70% fade amount)

    # Special Workspace Animations (Scratchpads)
    animation = specialWorkspace, 1, 4, easeOutQuart, slidefade 70% # Animation for showing/hiding special workspaces

    # Layer Animations (Popups, Notifications, Overlays)
    # These often control things like menus, notification popups, etc.
    # It's possible `layersIn`/`layersOut` and `fadeLayersIn`/`fadeLayersOut` overlap.
    # Test to see which combination works best for your setup (e.g., for Waybar menus, notifications).
    # You might only need one set depending on the desired effect.
    animation = layersIn, 1, 4, easeOutQuart, slide       # Layer surface appearance (e.g., Waybar tooltip)
    animation = layersOut, 1, 3, easeOutQuart, fade       # Layer surface disappearance
    animation = fadeLayersIn, 1, 4, easeOutQuart      # Alternative/additional fade for layer surfaces
    animation = fadeLayersOut, 1, 3, easeOutQuart     # Alternative/additional fade for layer surfaces
}

# --- LAYOUT CONFIGURATION --- #
# Configure the window layout engines.

# Dwindle Layout (Spiral Tiling) Settings
dwindle {
    pseudotile = yes         # Enable pseudotiling mode. When active, master window takes half the space,
                             # others stack on the other half. Toggled with $mainMod + P by default.
    preserve_split = yes     # Preserve the split direction (vertical/horizontal) when new windows are opened.
                             # `yes`: New window opens in the current split direction.
                             # `no`: New window forces the perpendicular split direction.
    force_split = 0          # 0: Default, 1: Always split horizontally, 2: Always split vertically.
    # special_scale_factor = 0.8 # Scale factor for windows on special workspaces (0.1 - 1.0)
    # split_width_multiplier = 1.0 # Multiplier for the split width/height
    # no_gaps_when_only = false # Disable gaps if only one window is open on the workspace
    # use_active_for_splits = true # Use the active window position for determining split direction
}

# Master Layout (Master and Stack) Settings
master {
    # new_is_master = true    # Newly opened windows become the master
    new_on_top = false      # Place new windows at the top of the stack (instead of bottom)
    # no_gaps_when_only = false # Disable gaps if only one window is open
    # mfact = 0.55            # Master area size factor (0.05 - 0.95)
}

# --- MISCELLANEOUS SETTINGS --- #
misc {
    # force_default_wallpaper = -1 # -1: Hyprland default, 0: Disable, >0: Use specified default wallpaper index
    disable_hyprland_logo = false     # Disable the Hyprland logo shown briefly on startup
    disable_splash_rendering = false  # Disable the splash screen rendering (logo and version)
    # mouse_move_enables_dpms = false # Wake display from DPMS sleep on mouse movement
    # key_press_enables_dpms = true  # Wake display from DPMS sleep on key press
    # always_follow_on_dnd = true    # Make Hyprland follow the cursor during drag and drop operations
    # layers_dont_check_resource = true # May fix issues with some layer-shell apps if they misbehave
    # animate_manual_resizes = false # Disable animations when manually resizing windows
    # animate_mouse_windowdragging = false # Disable animations when dragging windows with the mouse
    # enable_swallow = false           # Enable window swallowing (e.g., terminal opens image viewer, viewer replaces terminal)
    # swallow_regex = ^(kitty)$       # Regex for windows that can swallow others
    # focus_on_activate = false        # Prevent focus stealing when an app requests activation
    # no_direct_scanout = true         # Disables direct scanout (may fix flickering/visual glitches on some hardware)
    # hide_cursor_on_touch = true      # Hide cursor when touching the screen
    # render_ahead_of_time = false     # Predict frames to render ahead of time (experimental, may reduce latency)
    # render_ahead_safezone = 1        # Safezone for render_ahead_of_time (adjust if visuals break)
    # allow_session_lock_restore = true # Allow session lock lockers (hyprlock/swaylock) to restore state after unlock
    # groupbar_gradients = true         # Enable gradients in group bars (if using window grouping)
    # exit_pause_if_kb_lock_active = true # Pause the exit process if a keyboard lock (like Caps Lock) is active
}

# --- KEY BINDINGS --- #
# Define keyboard shortcuts for various actions.
# Format: bind = <modifier(s)>, <key>, <action>, [arguments]
# Modifiers: SUPER, CTRL, ALT, SHIFT, LSUPER, RCTRL, etc.
# Special Keys: Print, Escape, XF86AudioPlay, etc.
# Actions: exec, killactive, workspace, movetoworkspace, togglefloating, etc.

# Application Launchers
bind = $mainMod, Return, exec, $terminal      # Launch terminal
bind = $mainMod, C, exec, $editor        # Launch code editor
bind = $mainMod, B, exec, $browser       # Launch web browser
bind = $mainMod, E, exec, $fileManager   # Launch file manager
bind = $mainMod, A, exec, $menu          # Launch application menu (tofi)
bind = $mainMod, T, exec, $trading       # Launch TradingView

# System / Session Actions
bind = Ctrl, Escape, exec, killall waybar || waybar # Toggle Waybar (kill if running, start if not)
bind = SUPER, L, exec, hyprlock             # Lock the screen
bind = SUPER, ESCAPE, exec, wlogout         # Show logout menu (wlogout)
bind = $mainMod, M, exit,                   # Exit Hyprland session (graceful quit)

# Clipboard History
bind = SUPER, V, exec, cliphist list | tofi -c ~/.config/tofi/configV | cliphist decode | wl-copy # Show clipboard history via tofi

# Wallpaper Changer
# Note: Adjust path and transition options as needed
bind = SUPER, N, exec, swww img ~/Pictures/Another_Wallpaper/milad-fakurian-iLHDO19h0ng-unsplash.jpg --transition-fps 255 --transition-type outer --transition-duration 0.8

# Screenshotting (using grimblast)
# `copysave` copies to clipboard AND saves to file (check grimblast config for save location)
bind = , Print, exec, grimblast --notify copysave screen   # Screenshot entire screen
bind = SUPER, Print, exec, grimblast --notify copysave active  # Screenshot active window
bind = SUPER ALT, Print, exec, grimblast --notify copysave area   # Screenshot selected area

# Window Management
bind = $mainMod, Q, killactive,             # Close the active window
bind = $mainMod, F, fullscreen, 0          # Toggle fullscreen for active window (0: real fullscreen)
bind = $mainMod, Space, togglefloating,    # Toggle floating mode for active window
bind = $mainMod, P, pseudo,                 # Toggle dwindle layout's pseudotile mode
bind = $mainMod, J, togglesplit,            # Toggle dwindle layout's split direction (horizontal/vertical)

# Focus Movement (Vim-like keys - alternative or additional to arrow keys)
# bind = $mainMod, H, movefocus, l
# bind = $mainMod, L, movefocus, r
# bind = $mainMod, K, movefocus, u
# bind = $mainMod, J, movefocus, d # Note: Conflicts with togglesplit above if both uncommented

# Focus Movement (Arrow keys)
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move Active Window
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Workspace Navigation
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move Active Window to Workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Special Workspace (Scratchpad)
# 'magic' is just a name, you can call it anything.
bind = $mainMod, S, togglespecialworkspace, magic # Toggle the 'magic' special workspace
bind = $mainMod SHIFT, S, movetoworkspace, special:magic # Move active window to the 'magic' special workspace

# Workspace Scrolling with Mouse Wheel (on empty desktop area or bar)
bind = $mainMod, mouse_down, workspace, e+1 # Scroll down to next workspace
bind = $mainMod, mouse_up, workspace, e-1   # Scroll up to previous workspace

# Window Manipulation with Mouse
bindm = $mainMod, mouse:272, movewindow    # Hold Mod + Left Click to move window
bindm = $mainMod, mouse:273, resizewindow  # Hold Mod + Right Click to resize window

# --- Media Control Keys --- #
# `bindel` = bind + execute + repeat while held
# `bindl` = bind + execute + lock (prevents repeating while held)
# Check your keycodes using `wev` or similar tools if these don't work.

# Volume Control (using pamixer)
bindel = , XF86AudioRaiseVolume, exec, pamixer -i 5   # Increase volume by 5%
bindel = , XF86AudioLowerVolume, exec, pamixer -d 5   # Decrease volume by 5%
bindel = , XF86AudioMicMute, exec, pamixer --default-source -m # Toggle microphone mute
bindel = , XF86AudioMute, exec, pamixer -t             # Toggle main audio output mute

# Playback Control (using playerctl)
bindl = , XF86AudioPlay, exec, playerctl play-pause   # Play/Pause
bindl = , XF86AudioPause, exec, playerctl play-pause  # Play/Pause (often same key)
bindl = , XF86AudioNext, exec, playerctl next        # Next track
bindl = , XF86AudioPrev, exec, playerctl previous    # Previous track

# Screen Brightness Control (using brightnessctl)
bindel = , XF86MonBrightnessUp, exec, brightnessctl s +5% # Increase brightness by 5%
bindel = , XF86MonBrightnessDown, exec, brightnessctl s 5%- # Decrease brightness by 5%


# --- WINDOW RULES --- #
# Define rules for specific windows based on class, title, etc.
# Use `hyprctl clients` to find window properties (class, initialTitle).

# General Rules
windowrule = suppressevent maximize, class:.* # Prevent apps from forcing maximization state changes
windowrule = idleinhibit focus, class:.*      # Prevent idling (screen blanking/locking) when any window is focused
windowrule = idleinhibit fullscreen, class:.* # Prevent idling when any window is fullscreen

# Fix for focus issues with some empty XWayland windows (e.g., invisible helper windows)
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# Application-Specific Opacity Rules (using windowrulev2 for dynamic changes)
# Format: windowrulev2 = <rule>, <criteria>
# Example: windowrulev2 = opacity <active_opacity> <inactive_opacity>, <criteria>
windowrulev2 = opacity 0.90 0.90, class:^(kitty)$       # Set kitty terminal opacity (active/inactive)
# windowrulev2 = opacity 0.90 0.90, class:^(ghostty)$     # Set ghostty terminal opacity
windowrulev2 = opacity 0.90 0.90, class:^(Code)$        # Set VS Code opacity
windowrulev2 = opacity 0.90 0.90, class:^(firefox)$     # Set Firefox opacity
windowrulev2 = opacity 0.90 0.90, class:^(gedit)$       # Set Gedit opacity
windowrulev2 = opacity 0.85 0.85, class:^(zen-browser)$ # Set Zen browser opacity
# Note: Use `^()` for exact class matching, or just the class name for substring matching.

# --- Example Rules (Uncomment and modify as needed) --- #

# Make specific applications always float
# windowrule = float, class:^(pavucontrol)$       # Make Pavucontrol (Volume Control) float
# windowrule = float, class:^(blueman-manager)$   # Make Blueman (Bluetooth Manager) float
# windowrule = float, title:^(Picture-in-Picture)$ # Make Firefox Picture-in-Picture float

# Center floating windows
# windowrule = center, class:^(pavucontrol)$
# windowrule = center, class:^(blueman-manager)$

# Assign applications to specific workspaces
# windowrule = workspace 2, class:^(firefox)$
# windowrule = workspace 3, class:^(Code)$

# Set size for floating windows
# windowrule = size 800 600, class:^(pavucontrol)$

# --- OPTIONAL WORKSPACE LAYOUT RULES (Uncomment to enable) --- #
# These rules can override global gap/border settings for specific workspaces.
# Create workspaces named 'w[tv1]' and 'f[1]' or change names as desired.
# workspace = name:w[tv1], gapsout:0, gapsin:0, border:false, decorate:false
# workspace = name:f[1], gapsout:0, gapsin:0, border:false, decorate:false
# windowrule = bordersize 0, onworkspace:name:w[tv1] # Alternative way to remove border
# windowrule = rounding 0, onworkspace:name:w[tv1]   # Remove rounding
# windowrule = bordersize 0, onworkspace:name:f[1]
# windowrule = rounding 0, onworkspace:name:f[1]

# --- End of Configuration --- #