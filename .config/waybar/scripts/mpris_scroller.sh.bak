#!/bin/bash

# Lấy danh sách các player đang phát
players=$(playerctl -l 2>/dev/null)
if [ -z "$players" ]; then
  exit 0
fi

# Duyệt qua các player và chọn player đang phát đầu tiên
selected_player=""
for p in $players; do
  status=$(playerctl -p "$p" status 2>/dev/null)
  if [[ "$status" == "Playing" || "$status" == "Paused" ]]; then
    selected_player="$p"
    break
  fi
done

[ -z "$selected_player" ] && exit 0

# Lấy thông tin metadata
artist=$(playerctl -p "$selected_player" metadata artist 2>/dev/null)
title=$(playerctl -p "$selected_player" metadata title 2>/dev/null)
status=$(playerctl -p "$selected_player" status 2>/dev/null)

# Lấy tiêu đề cửa sổ dựa trên pid
pid=$(playerctl -p "$selected_player" metadata mpris:pid 2>/dev/null)
window_title=$(hyprctl clients | awk -v pid="$pid" '
  $1 == "pid:" && $2 == pid {found=1}
  found && $1 == "title:" {print substr($0, index($0,$2)); exit}
')

# Escape dấu &
escape_amp() {
  echo "$1" | sed 's/&/\&amp;/g'
}

artist=$(escape_amp "$artist")
title=$(escape_amp "$title")

# Tự động lấy icon từ process name
exe_name=$(ps -p "$pid" -o comm= | head -n1)
desktop_file=$(grep -ril "$exe_name" /usr/share/applications/ ~/.local/share/applications/ 2>/dev/null | head -n1)

if [[ -f "$desktop_file" ]]; then
  icon_name=$(grep -m1 "^Icon=" "$desktop_file" | cut -d= -f2)
else
  icon_name="$exe_name"
fi

# Map icon_name → Nerd Font symbol
case "$icon_name" in
  *spotify*) icon="<span color='#a6e3a1' font_size='large'>󰓇</span>" ;;
  *mpv*) icon="<span color='#f9e2af' font_size='large'>󰎆</span>" ;;
  *vlc*) icon="<span color='#f9e2af' font_size='large'>󰕼</span>" ;;
  *firefox*) icon="<span color='#89b4fa' font_size='large'>󰈹</span>" ;;
  *youtube_music*|**youtube-music*|*YouTube Music*) icon="<span color='#ff6ac1' font_size='large'>󰗃</span>" ;;
  *chromium*|*chrome*) icon="<span color='#f38ba8' font_size='large'>󰊯</span>" ;;
  *clementine*) icon="<span color='#fab387' font_size='large'>󰎈</span>" ;;
  *audacious*) icon="<span color='#cba6f7' font_size='large'></span>" ;;
  *rhythmbox*) icon="<span color='#94e2d5' font_size='large'>󰝚</span>" ;;
  *) icon="<span color='#f9e2af'>▶</span>" ;;  # fallback
esac

# Scroll text if combined artist and title is too long
MAX_LENGTH=40
SCROLL_STATE_FILE="/tmp/mpris_scroll_${selected_player// /_}"
SONG_ID_FILE="/tmp/mpris_song_${selected_player// /_}"

combined_text="$artist - $title"
current_song_id="${artist}_${title}"

if [ -f "$SONG_ID_FILE" ]; then
  prev_song_id=$(cat "$SONG_ID_FILE")
  if [ "$prev_song_id" != "$current_song_id" ]; then
    echo "0" > "$SCROLL_STATE_FILE"
    echo "$current_song_id" > "$SONG_ID_FILE"
  fi
else
  echo "0" > "$SCROLL_STATE_FILE"
  echo "$current_song_id" > "$SONG_ID_FILE"
fi

scroll_text() {
  local text="$1"
  local max_len="$2"
  
  if [ ${#text} -le $max_len ]; then
    echo "$text"
    return
  fi
  
  local pos=0
  [ -f "$SCROLL_STATE_FILE" ] && pos=$(cat "$SCROLL_STATE_FILE")
  
  local padded_text="${text}          ${text}"
  local total_length=${#text}
  local visible_text="${padded_text:$pos:$max_len}"
  
  pos=$((pos + 1))
  if [ $pos -ge $((total_length + 10)) ]; then
    pos=0
  fi
  echo "$pos" > "$SCROLL_STATE_FILE"
  
  echo "$visible_text"
}

# Display output
if [[ "$status" == "Playing" ]]; then
  if [ ${#combined_text} -gt $MAX_LENGTH ]; then
    scrolled_text=$(scroll_text "$combined_text" $MAX_LENGTH)
    echo "$icon <span foreground='#cdd6f4'>$scrolled_text</span>"
  else
    echo "$icon <span foreground='#cdd6f4' font_weight='bold'> $artist</span> - <span foreground='#f5c2e7'>$title </span>"
  fi
else
  echo "$icon <span foreground='#bac2de' font_style='italic'> $artist - $title </span>"
fi

